// =============================================================
//  Dynamic RP Collar â€“ dsc_settings  (2025-06-25)
//  Simple key/value memory store
// =============================================================

integer getChannelBase()
{
    integer tail = (integer)("0x" + llGetSubString((string)llGetKey(), -6, -1));
    return -4000 - (tail & 0x0FFF);
}

integer CHANNEL_BASE;
integer CHAN_CORE;
integer CHAN_AUTH;
integer CHAN_SETTINGS;
integer CHAN_MENU;

// ---------- storage ----------
list gKeys;
list gValues;

integer kvSet(string k, string v)
{
    integer idx = llListFindList(gKeys, [k]);
    if (~idx)
        gValues = llListReplaceList(gValues, [v], idx, idx);
    else
    {
        gKeys   += k;
        gValues += v;
    }
    return 0;
}

string kvGet(string k)
{
    integer idx = llListFindList(gKeys, [k]);
    if (~idx) return llList2String(gValues, idx);
    return "";
}

// -------------------------------------------------------------
default
{
    state_entry()
    {
        llSetRemoteScriptAccessPin(0);

        CHANNEL_BASE  = getChannelBase();
        CHAN_CORE     = CHANNEL_BASE - 0;
        CHAN_AUTH     = CHANNEL_BASE - 1;
        CHAN_SETTINGS = CHANNEL_BASE - 2;
        CHAN_MENU     = CHANNEL_BASE - 3;
    }

    link_message(integer sender, integer channel, string msg, key id)
    {
        if (channel != CHAN_SETTINGS) return;

        list p = llParseString2List(msg, ["|"], []);
        string op = llList2String(p, 0);

        if (op == "SET")
        {
            string k = llList2String(p, 1);
            string v = llList2String(p, 2);
            kvSet(k, v);
        }
        else if (op == "GET")
        {
            string k          = llList2String(p, 1);
            string cfgValue   = kvGet(k);
            llMessageLinked(sender, CHAN_SETTINGS,
                            "VAL|" + k + "|" + cfgValue, NULL_KEY);
        }
    }

    // This script ignores CORE|RELOAD to ensure it survives resets.
}
